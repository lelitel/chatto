class TankViewer{constructor(params){this.element=params.element,this.garage=params.garage,this.excluded=/(box.*|fmnt.*|muzzle.*|laser|rocket|exh_.*|smk_.*|boundbox|shell)/i,this.animationFrames=[!1,!1,!1,!1,!1],this.rotateAnimation=[!1,!1],this.tracksUrl="/assets/garage/garage/trucks.webp",this.dataUrl="/assets/garage/garage/",this.readyState=0,this.colorFrames={currentFrame:0,currentFrameX:0,currentFrameY:0},this.colorParams={},this.meshes={turret:[],hull:[],floor:[],hullMount:""},this.continueAnimation=!0,this.rotateinterval=!1,this.three={scene:!1,camera:!1,element:!1,renderer:!1,radian:0,radian1:0,hullTexture:!1,turretTexture:!1,cameraOnce:!1,elW:0,elH:0,hullRotation:[0,0,0],turretRotation:[0,0,0],floorRotation:[0,0,0],updateCamera:()=>{if(!this.continueAnimation)return setTimeout(()=>{this.animationFrames[0]=requestAnimationFrame(this.three.updateCamera)},500),!1;this.animationFrames[0]=requestAnimationFrame(this.three.updateCamera);let cameraPosX=-131,cameraPosY=293;this.three.hullTexture.needsUpdate=!0,this.three.turretTexture.needsUpdate=!0,this.three.renderer.render(this.three.scene,this.three.camera),this.three.camera.position.x=-131*Math.cos(this.three.radian)/4-131,this.three.camera.position.y=293+293*Math.sin(this.three.radian)/4,this.three.radian+=.01,this.three.camera.lookAt(new THREE.Vector3(-470,50,-2231))}},this.manager=new THREE.LoadingManager,this.manager.onLoad=function(){},this.init=async params=>{let hull=params.hull,turret=params.turret,color=params.color;this.animationFrames[0]&&cancelAnimationFrame(this.animationFrames[0]),this.animationFrames[1]&&cancelAnimationFrame(this.animationFrames[1]),this.animationFrames[2]&&cancelAnimationFrame(this.animationFrames[2]),color[1].animated&&(this.colorParams={frameWidth:color[1].frameWidth,frameHeight:color[1].frameHeight,numFrames:color[1].numFrames,fps:color[1].fps},this.startUpdatingFrames()),this.element.innerHTML="";let hullCanvas=document.createElement("canvas"),hullTexture=new THREE.Texture(hullCanvas);hullTexture.minFilter=THREE.LinearFilter,this.three.hullTexture=hullTexture;let turretCanvas=document.createElement("canvas"),turretTexture=new THREE.Texture(turretCanvas);turretTexture.minFilter=THREE.LinearFilter,this.three.turretTexture=turretTexture,this.createTexture(hullCanvas,hull,color),this.createTexture(turretCanvas,turret,color),this.three.scene=new THREE.Scene,this.three.camera=new THREE.PerspectiveCamera(65,this.element.offsetWidth/this.element.offsetHeight,1,1e8),this.three.renderer=new THREE.WebGLRenderer({antialias:!0,alpha:!0,premultipliedAlpha:!0}),this.three.renderer.setClearColor(1844005,1),this.three.renderer.setPixelRatio(window.devicePixelRatio),this.three.renderer.shadowMap.enabled=!1;let objLoader=new THREE.OBJLoader,textureLoader=new THREE.TextureLoader,w=await this.element.offsetWidth,h=this.element.offsetHeight;this.three.elW=w,this.three.elH=h,this.three.renderer.setSize(w,h),this.three.camera.aspect=w/h,this.three.camera.updateProjectionMatrix(),this.three.renderer.setClearColor(0,0),this.three.renderer.setSize(this.element.clientWidth,this.element.clientHeight),this.element.appendChild(this.three.renderer.domElement),this.three.camera.position.x=-131,this.three.camera.position.y=293,this.three.camera.position.z=-2736;let loadGarage=new Promise(resolve=>{objLoader.load(this.dataUrl+"model.obj",object=>{let meshes=[];object.traverse(object3d=>{object3d instanceof THREE.Mesh&&meshes.push(object3d)}),meshes[0].geometry.computeBoundingSphere();for(let i=meshes.length-1;i>=0;i--){let mesh=meshes[i];if(!/(light.*|cam.*)/i.test(mesh.name)){if("Sky0_14"==mesh.name)mesh.material=new THREE.MeshBasicMaterial({map:textureLoader.load(this.dataUrl+"sky1.webp")}),mesh.position.y=-1500;else if("bg0_13"==mesh.name)mesh.material=new THREE.MeshBasicMaterial({map:textureLoader.load(this.dataUrl+"bg1.webp")});else if("room0_8"==mesh.name)mesh.material=new THREE.MeshBasicMaterial({map:textureLoader.load(this.dataUrl+"gar1.webp")});else if("belt_L_10"==mesh.name||"belt_R_11"==mesh.name){this.meshes.floor.push(mesh);let texture=textureLoader.load(this.dataUrl+"race1.webp");texture.wrapS=THREE.RepeatWrapping,texture.wrapT=THREE.RepeatWrapping,texture.repeat.set(1,1),mesh.material=new THREE.MeshBasicMaterial({map:texture})}else"tnk_base_9"==mesh.name?(this.meshes.floor.push(mesh),mesh.material=new THREE.MeshBasicMaterial({map:textureLoader.load(this.dataUrl+"pl2.webp")})):"tnk_plat_7"==mesh.name?mesh.material=new THREE.MeshBasicMaterial({map:textureLoader.load(this.dataUrl+"pl1.webp")}):"floor0_6"==mesh.name?mesh.material=new THREE.MeshBasicMaterial({map:textureLoader.load(this.dataUrl+"flr.webp")}):"transp1_3"!=mesh.name&&"transp2_12"!=mesh.name||(mesh.material=new THREE.MeshBasicMaterial({map:textureLoader.load(this.dataUrl+"bl.webp"),alphaTest:.5}));resolve(mesh.material.transparent=!0,mesh.position.x=-meshes[0].geometry.boundingSphere.center.x,mesh.position.y=0,mesh.position.z=-meshes[0].geometry.boundingSphere.center.z,this.three.scene.add(mesh))}}})});await loadGarage;let turretPosY=0,turretPosX=0,turretPosZ=0,loadHull=new Promise(resolve=>{objLoader.load(hull+"model.obj",object=>{let meshes=[];object.traverse(object3d=>{object3d instanceof THREE.Mesh&&meshes.push(object3d)}),meshes[0].geometry.computeBoundingSphere();for(let i=meshes.length-1;i>=0;i--){let mesh=meshes[i];if(!this.excluded.test(mesh.name)){if(/[lr]track/i.test(mesh.name)){let trackTexture=textureLoader.load(this.tracksUrl);trackTexture.minFilter=THREE.LinearFilter,trackTexture.wrapS=THREE.RepeatWrapping,trackTexture.wrapT=THREE.RepeatWrapping,trackTexture.repeat.set(1,1),mesh.material=new THREE.MeshBasicMaterial({map:trackTexture})}else mesh.material=new THREE.MeshBasicMaterial({map:hullTexture});if(mesh.position.x=-meshes[0].geometry.boundingSphere.center.x-460,mesh.position.y=22.3,mesh.position.z=-meshes[0].geometry.boundingSphere.center.z-2200,-1!==mesh.name.toLowerCase().indexOf("mount")){let mount=(new THREE.Box3).setFromObject(mesh);this.meshes.hullMount=mount,resolve(turretPosX=(mount.min.x+mount.max.x)/2,turretPosY=mount.min.y,turretPosZ=(mount.min.z+mount.max.z)/2)}else this.three.scene.add(mesh);this.meshes.hull.push(mesh)}}})});await loadHull;let loadTurret=new Promise(resolve=>{objLoader.load(turret+"model.obj",object=>{let meshes=[];object.traverse(object3d=>{object3d instanceof THREE.Mesh&&meshes.push(object3d)}),meshes[0].geometry.computeBoundingSphere();for(let i=meshes.length-1;i>=0;i--){let mesh=meshes[i];this.excluded.test(mesh.name)||(mesh.material=new THREE.MeshBasicMaterial({map:turretTexture}),mesh.position.x=turretPosX,mesh.position.y=turretPosY,mesh.position.z=turretPosZ,resolve(this.three.scene.add(mesh),this.meshes.turret.push(mesh)))}})});await loadTurret,this.three.updateCamera(this),this.rotate(this),this.mouse(this),params.cb&&params.cb()},this.install=async params=>{let hull=params.hull,turret=params.turret,color=params.color;this.animationFrames[0]&&cancelAnimationFrame(this.animationFrames[0]),this.animationFrames[1]&&cancelAnimationFrame(this.animationFrames[1]),this.animationFrames[2]&&cancelAnimationFrame(this.animationFrames[2]),color[1].animated&&(this.colorParams={frameWidth:color[1].frameWidth,frameHeight:color[1].frameHeight,numFrames:color[1].numFrames,fps:color[1].fps},this.startUpdatingFrames());let hullCanvas=document.createElement("canvas"),hullTexture=new THREE.Texture(hullCanvas);hullTexture.minFilter=THREE.LinearFilter,this.three.hullTexture=hullTexture;let turretCanvas=document.createElement("canvas"),turretTexture=new THREE.Texture(turretCanvas);turretTexture.minFilter=THREE.LinearFilter,this.three.turretTexture=turretTexture;let turretName=this.three.scene.getObjectByName("turret"),hullName=this.three.scene.getObjectByName("hull");for(let m of this.meshes.turret)this.three.scene.remove(m);for(let m of this.meshes.hull)this.three.scene.remove(m);this.meshes.turret.length=0,this.meshes.hull.length=0,this.createTexture(hullCanvas,hull,color),this.createTexture(turretCanvas,turret,color);let objLoader=new THREE.OBJLoader(this.manager),textureLoader=new THREE.TextureLoader,turretPosY=0,turretPosX=0,turretPosZ=0,loadHull=new Promise(resolve=>{objLoader.load(hull+"model.obj",object=>{let meshes=[];object.traverse(object3d=>{object3d instanceof THREE.Mesh&&meshes.push(object3d)}),meshes[0].geometry.computeBoundingSphere();for(let i=meshes.length-1;i>=0;i--){let mesh=meshes[i];if(!this.excluded.test(mesh.name)){if(/[lr]track/i.test(mesh.name)){let trackTexture=textureLoader.load(this.tracksUrl);trackTexture.minFilter=THREE.LinearFilter,trackTexture.wrapS=THREE.RepeatWrapping,trackTexture.wrapT=THREE.RepeatWrapping,trackTexture.repeat.set(1,1),mesh.material=new THREE.MeshBasicMaterial({map:trackTexture})}else mesh.material=new THREE.MeshBasicMaterial({map:hullTexture});if(mesh.position.x=-meshes[0].geometry.boundingSphere.center.x-460,mesh.position.y=22.3,mesh.position.z=-meshes[0].geometry.boundingSphere.center.z-2200,-1!==mesh.name.toLowerCase().indexOf("mount")){let mount=(new THREE.Box3).setFromObject(mesh);this.meshes.hullMount=mount,resolve(turretPosX=(mount.min.x+mount.max.x)/2,turretPosY=mount.min.y,turretPosZ=(mount.min.z+mount.max.z)/2)}else this.three.scene.add(mesh);this.meshes.hull.push(mesh)}}})});await loadHull;let loadTurret=new Promise(resolve=>{objLoader.load(turret+"model.obj",object=>{let meshes=[];object.traverse(object3d=>{object3d instanceof THREE.Mesh&&meshes.push(object3d)}),meshes[0].geometry.computeBoundingSphere();for(let i=meshes.length-1;i>=0;i--){let mesh=meshes[i];this.excluded.test(mesh.name)||(mesh.material=new THREE.MeshBasicMaterial({map:turretTexture}),mesh.position.x=turretPosX,mesh.position.y=turretPosY,mesh.position.z=turretPosZ,resolve(this.three.scene.add(mesh),this.meshes.turret.push(mesh)))}})});await loadTurret;let turretMesh=this.meshes.turret,hullMesh=this.meshes.hull,floorMesh=this.meshes.floor;for(let i=0;i<turretMesh.length;i++)void 0!==turretMesh[i].rotation&&(turretMesh[i].rotation.y=this.three.turretRotation[i]);for(let i=0;i<hullMesh.length;i++)void 0!==hullMesh[i].rotation&&(hullMesh[i].rotation.y=this.three.hullRotation[i]);for(let i=0;i<floorMesh.length;i++)void 0!==floorMesh[i].rotation&&(floorMesh[i].rotation.y=this.three.floorRotation[i]);this.turretF(),cancelAnimationFrame(this.animationFrames[0]),this.three.updateCamera(this)},this.turretF=function(){let turretMesh=this.meshes.turret,hullMesh=this.meshes.hull;for(let i=0;i<hullMesh.length;i++)if(-1!==hullMesh[i].name.toLowerCase().indexOf("mount")){let mount=(new THREE.Box3).setFromObject(hullMesh[i]);this.meshes.hullMount=mount;for(let j=0;j<turretMesh.length;j++)void 0!==turretMesh[j].rotation&&(turretMesh[j].position.x=(mount.min.x+mount.max.x)/2),void 0!==turretMesh[j].rotation&&(turretMesh[j].position.y=mount.min.y),void 0!==turretMesh[j].rotation&&(turretMesh[j].position.z=(mount.min.z+mount.max.z)/2)}},this.rotate=function(viewer){if(!viewer.continueAnimation)return!1;let turretMesh=viewer.meshes.turret,hullMesh=viewer.meshes.hull,floorMesh=viewer.meshes.floor;document.addEventListener("keydown",(function(e){if("BODY"!==e.target.tagName)return!1;if(!viewer.continueAnimation)return!1;let key=e.code,speed=.05;if("KeyZ"==key)for(let i=0;i<turretMesh.length;i++)void 0!==turretMesh[i].rotation&&(turretMesh[i].rotation.y-=.05);else if("KeyX"==key)for(let i=0;i<turretMesh.length;i++)void 0!==turretMesh[i].rotation&&(turretMesh[i].rotation.y+=.05);else if("KeyC"==key)for(let i=0;i<turretMesh.length;i++)void 0!==turretMesh[i].rotation&&(turretMesh[i].rotation.y=0);else if("KeyA"==key){for(let i=0;i<hullMesh.length;i++)void 0!==hullMesh[i].rotation&&(hullMesh[i].rotation.y-=.05);for(let i=0;i<floorMesh.length;i++)void 0!==floorMesh[i].rotation&&(floorMesh[i].rotation.y-=.05);viewer.turretF()}else if("KeyD"==key){for(let i=0;i<hullMesh.length;i++)void 0!==hullMesh[i].rotation&&(hullMesh[i].rotation.y+=.05);for(let i=0;i<floorMesh.length;i++)void 0!==floorMesh[i].rotation&&(floorMesh[i].rotation.y+=.05);viewer.turretF()}else if("KeyF"==key){for(let i=0;i<hullMesh.length;i++)void 0!==hullMesh[i].rotation&&(hullMesh[i].rotation.y=0);for(let i=0;i<floorMesh.length;i++)void 0!==floorMesh[i].rotation&&(floorMesh[i].rotation.y=0)}else if("KeyG"==key){for(let i=0;i<hullMesh.length;i++)void 0!==hullMesh[i].rotation&&hullMesh[i].lookAt({x:0,y:0,z:0});viewer.turretF()}}))},this.rotateM=(meshes,speed,direction)=>{for(let i=0;i<meshes.length;i++)void 0!==meshes[i].rotation&&(direction?meshes[i].rotation.y+=speed:meshes[i].rotation.y-=speed)},this.mouse=function(viewer){if(!this.continueAnimation)return!1;let turretMesh=this.meshes.turret,hullMesh=this.meshes.hull,floorMesh=this.meshes.floor,isDragging=!1,prevX=-1,toleft=!1,mouseClickX=0,mouseClickY=0;function onMouseMove(e){if(e.preventDefault(),!viewer.continueAnimation)return!1;let speed=.1;if(speed=Math.sin(speed),-1==prevX)return prevX=e.pageX,!1;prevX>e.pageX?(toleft=!0,viewer.rotateM(turretMesh,speed),viewer.rotateM(hullMesh,speed),viewer.rotateM(floorMesh,speed),viewer.turretF()):prevX<e.pageX&&(toleft=!1,viewer.rotateM(turretMesh,speed,1),viewer.rotateM(hullMesh,speed,1),viewer.rotateM(floorMesh,speed,1),viewer.turretF()),prevX=e.pageX,viewer.animationFrames[3]=requestAnimationFrame((function(){}))}document.addEventListener("mousedown",(function(e){if("CANVAS"!==e.target.tagName)return!1;function finishDrag(e){if(!isDragging)return;let speed=.1;viewer.three.turretRotation.length=0,viewer.three.hullRotation.length=0,viewer.three.floorRotation.length=0;for(let i=0;i<turretMesh.length;i++)void 0!==turretMesh[i].rotation&&(viewer.three.turretRotation[i]=turretMesh[i].rotation.y);for(let i=0;i<hullMesh.length;i++)void 0!==hullMesh[i].rotation&&(viewer.three.hullRotation[i]=hullMesh[i].rotation.y);for(let i=0;i<floorMesh.length;i++)void 0!==floorMesh[i].rotation&&(viewer.three.floorRotation[i]=floorMesh[i].rotation.y);isDragging=!1,cancelAnimationFrame(viewer.animationFrames[3]),document.removeEventListener("mousemove",onMouseMove)}function startDrag(){if(!isDragging){if(!viewer.continueAnimation)return!1;document.removeEventListener("mousemove",onMouseMove),document.addEventListener("mouseup",finishDrag),document.addEventListener("mousemove",onMouseMove),isDragging=!0}}mouseClickX=e.clientX,mouseClickY=e.clientY,startDrag()}))},this.autoRotate=()=>{if(!this.continueAnimation)return!1;let turretMesh=this.meshes.turret,hullMesh=this.meshes.hull,floorMesh=this.meshes.floor,speed=.003;speed=Math.sin(speed)/4;for(let i=0;i<turretMesh.length;i++)void 0!==turretMesh[i].rotation&&(turretMesh[i].rotation.y-=speed);for(let i=0;i<hullMesh.length;i++)void 0!==hullMesh[i].rotation&&(hullMesh[i].rotation.y-=speed);for(let i=0;i<floorMesh.length;i++)void 0!==floorMesh[i].rotation&&(floorMesh[i].rotation.y-=speed);this.turretF(),this.animationFrames[3]=requestAnimationFrame(this.autoRotate)},this.createTexture=(canvas,itemUrl,colorUrl)=>{this.readyState>=2&&(this.readyState=0);let lightmap=new Image;lightmap.onload=()=>{let color=new Image;color.onload=()=>{let details=new Image;details.onload=()=>{if(canvas.width=lightmap.width,canvas.height=lightmap.height,"0"==colorUrl[1].animated){let context2d=canvas.getContext("2d"),pattern=context2d.createPattern(color,"repeat");context2d.globalCompositeOperation="hard-light",context2d.fillStyle=pattern,context2d.fillRect(0,0,lightmap.width,lightmap.height),context2d.drawImage(lightmap,0,0),context2d.globalCompositeOperation="source-over",context2d.drawImage(details,0,0)}else{this.readyState++;let frameWidth=colorUrl[1].frameWidth,frameHeight=colorUrl[1].frameHeight;this.colorParams.numFramesX=color.width/frameWidth,this.colorParams.numFramesY=color.height/frameHeight;let anim=()=>{if(!this.continueAnimation)return setTimeout(()=>{this.animationFrames[1]=requestAnimationFrame(anim)},500),!1;if(this.animationFrames[1]=requestAnimationFrame(anim),!(this.readyState<2)){let colorImage=document.createElement("canvas");colorImage.width=frameWidth,colorImage.height=frameHeight,colorImage.getContext("2d").drawImage(color,-Math.floor(this.colorFrames.currentFrameX*frameWidth),-Math.floor(this.colorFrames.currentFrameY*frameHeight));let context2d=canvas.getContext("2d");context2d.clearRect(0,0,lightmap.width,lightmap.height),context2d.globalCompositeOperation="hard-light",context2d.fillStyle=context2d.createPattern(colorImage,"repeat"),context2d.fillRect(0,0,lightmap.width,lightmap.height),context2d.drawImage(lightmap,0,0),context2d.globalCompositeOperation="source-over",context2d.drawImage(details,0,0)}};anim()}},details.src=itemUrl+"details.png"},color.src=colorUrl[0]},lightmap.src=itemUrl+"lightmap.jpg"},this.startUpdatingFrames=()=>{let clock=new THREE.Clock,delta=0,anim=()=>{if(!this.continueAnimation)return setTimeout(()=>{this.animationFrames[2]=requestAnimationFrame(anim)},500),!1;this.animationFrames[2]=requestAnimationFrame(anim),delta+=clock.getDelta(),delta>1/this.colorParams.fps&&this.readyState>=2&&(this.colorFrames.currentFrame++,this.colorFrames.currentFrameX++,this.colorFrames.currentFrameX>=this.colorParams.numFramesX&&(this.colorFrames.currentFrameX=0,this.colorFrames.currentFrameY++),(this.colorFrames.currentFrameY>=this.colorParams.numFramesY||this.colorFrames.currentFrame>=this.colorParams.numFrames)&&(this.colorFrames.currentFrame=0,this.colorFrames.currentFrameX=0,this.colorFrames.currentFrameY=0),delta%=1/this.colorParams.fps)};anim()}}}THREE.WindowResize=()=>{let callback=()=>{};return window.addEventListener("resize",callback,!1),{stop(){window.removeEventListener("resize",callback)}}};